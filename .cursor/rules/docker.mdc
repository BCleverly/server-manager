---
description: 
globs: 
alwaysApply: false
---
# Meta Development Context (MDC)

This file documents the development environment, standards, and update rules for the Server Manager project. Keep this file up to date as the project evolves.

---

## Development Environment

- **Docker:** All development should be done using the provided Docker Compose setup to ensure consistency across all contributors.
- **PHP:** 8.4+
- **Laravel:** 12.x
- **Livewire:** 3.5+
- **Node:** Use the version specified in the Dockerfile (update as needed for compatibility with Tailwind/daisyUI).
- **Redis:** Redis 7 is included as a service in the Docker Compose environment for caching, queues, and session management.

## Services

- **app:** PHP-FPM, Composer, Node, NPM (Laravel application)
- **nginx:** Serves the application via HTTP
- **redis:** In-memory data store for cache, queues, and sessions

## Standards

- Follow PSR-12 and Laravel best practices.
- Use strict typing and SOLID principles.
- All code must be covered by PestPHP tests.
- All code must pass PHPStan (level max).
- Use Livewire and Blade components for UI.
- Use Tailwind CSS and daisyUI for styling.

## Update Procedures

- When updating PHP, Laravel, Livewire, or other core dependencies, update the Dockerfile and docker-compose.yml accordingly.
- Update the README.md and this MDC file to reflect any changes in the development environment or standards.
- Ensure all tests pass and PHPStan reports no errors before merging changes.

## Testing

- Run PestPHP tests and PHPStan in the Docker container before pushing or merging.
- Use GitHub Actions for CI to enforce code quality and test coverage.

## Manual Testing

- Use the Dockerized environment to manually test the application in a browser at http://localhost:8000.

---

_Last updated: 2024-06-09_



