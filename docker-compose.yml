version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: server-manager-app:dev
    container_name: server-manager-app
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html
      - ./storage/logs:/var/www/html/storage/logs
      - ./storage/framework/cache:/var/www/html/storage/framework/cache
      - ./storage/framework/sessions:/var/www/html/storage/framework/sessions
      - ./storage/framework/views:/var/www/html/storage/framework/views
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=null
      - DB_CONNECTION=sqlite
      - DB_DATABASE=/var/www/html/database/database.sqlite
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      - redis
    networks:
      - smnet
    command: ["frankenphp", "run", "--config", "/var/www/html/frankenphp.toml"]

  redis:
    image: redis:7-alpine
    container_name: server-manager-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - smnet

  # Optional: MySQL service for production-like testing
  mysql:
    image: mysql:8.0
    container_name: server-manager-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: server_manager
      MYSQL_USER: server_manager
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - smnet
    profiles:
      - mysql

  # Optional: PostgreSQL service for production-like testing
  postgres:
    image: postgres:15-alpine
    container_name: server-manager-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: server_manager
      POSTGRES_USER: server_manager
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - smnet
    profiles:
      - postgres

volumes:
  redis_data:
  mysql_data:
  postgres_data:

networks:
  smnet:
    driver: bridge 